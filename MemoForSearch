Linear Search
配列の先頭から各要素が目的の値と等しいかどうかを順番に調べる
等しいものが見つかった時点でその位置を返し、見つからない場合はそのことを示す値を返す。
番兵法---リストの末尾に探している数値を追加し必ず探索が終わるようにする(参照する条件が一つ減るため高速化が可能)

Binary Search
データの大小関係を利用した高速な探索アルゴリズム
各計算ステップにおいて調べる範囲を半分にしていく
インデックスを基準に(midをインデックスにしてどんどん調べる、rightとleftはインデックスのmidを導くために使う)
ある法則に基づいてリストを並べれば二分探索を使える(set関数をリスト化した時要素の順序は不規則)


Hash Search
ハッシュ関数という関数値によって要素の格納場所を決定する。
要素のキーを引数とした関数を呼び出すだけでその位置を特定することができる。
場合によっては高速